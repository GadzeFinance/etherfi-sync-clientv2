name: Create Release with Binary
on:
  push:
    branches:
      - master

jobs:
  create_release_with_binary:
    name: Create Release with Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install GCC
        run: |
          sudo apt-get update &&
          sudo apt-get install gcc
          gcc --version

      - name: Build Go Application
        run: GOOS=linux GOARCH=arm64 go build -o etherfi-sync-client-linux-arm64

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.2
          release_name: v1.0.2
          draft: false
          prerelease: false

      - name: Print everything out
        run: ls

      - name: Zip it!
        run: tar -czvf etherfi-sync-client-linux-arm64.tar.gz -C . etherfi-sync-client-linux-arm64

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./etherfi-sync-client-linux-arm64.tar.gz
          asset_name: etherfi-sync-client-linux-arm64.tar.gz
          asset_content_type: application/tar+gzip